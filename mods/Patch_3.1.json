{
  "name": "Patch 3.1.1EC1",
  "author": "Cobalt Official",
  "description": "Adds a Test tab with a CMLM editor, file drop loader, and mod registration.",
  "code": "(function () {\n  if (document.querySelector('[data-tab=\"test\"]')) return;\n\n  // Create tab button\n  const tabButton = document.createElement('div');\n  tabButton.className = 'cobalt-tab';\n  tabButton.dataset.tab = 'test';\n  tabButton.textContent = 'Test';\n  document.getElementById('cobalt-tabs').appendChild(tabButton);\n\n  // Create tab content panel\n  const tabContent = document.createElement('div');\n  tabContent.id = 'test';\n  tabContent.className = 'cobalt-tab-content';\n  tabContent.innerHTML = `\n    <h2>Test</h2>\n    <textarea id=\"cmlm-editor\" style=\"width:100%;height:200px;font-family:monospace;\"></textarea>\n    <br>\n    <input id=\"mod-name\" placeholder=\"Mod Name\" style=\"width:100%;margin-top:10px;\">\n    <input id=\"mod-author\" placeholder=\"Author\" style=\"width:100%;margin-top:5px;\">\n    <input id=\"mod-desc\" placeholder=\"Description\" style=\"width:100%;margin-top:5px;\">\n    <button id=\"cmlm-save\">Save as .CMLM</button>\n    <button id=\"cmlm-register\">Save to Mods</button>\n    <div id=\"cmlm-dropzone\" style=\"margin-top:20px;padding:20px;border:2px dashed #888;text-align:center;\">\n      Drop .CMLM file here to load\n    </div>\n  `;\n  document.getElementById('cobalt-sidebar').appendChild(tabContent);\n\n  // Tab switching logic\n  tabButton.addEventListener('click', () => {\n    document.querySelectorAll('.cobalt-tab').forEach(t => t.classList.remove('active'));\n    document.querySelectorAll('.cobalt-tab-content').forEach(c => c.classList.remove('active'));\n    tabButton.classList.add('active');\n    tabContent.classList.add('active');\n  });\n\n  // Save button logic\n  document.getElementById('cmlm-save').addEventListener('click', () => {\n    const rawCode = document.getElementById('cmlm-editor').value;\n    const blob = new Blob([rawCode], { type: 'text/plain' });\n    const a = document.createElement('a');\n    a.href = URL.createObjectURL(blob);\n    a.download = 'mod.cmlm';\n    a.click();\n    URL.revokeObjectURL(a.href);\n  });\n\n  // Register mod to Mods tab\n  document.getElementById('cmlm-register').addEventListener('click', () => {\n    let parsed;\n    try {\n      parsed = JSON.parse(document.getElementById('cmlm-editor').value);\n    } catch (err) {\n      alert('Invalid CMLM format. Must be valid JSON.');\n      return;\n    }\n\n    const name = document.getElementById('mod-name').value.trim() || parsed.name || 'Untitled Mod';\n    const author = document.getElementById('mod-author').value.trim() || parsed.author || 'Anonymous';\n    const desc = document.getElementById('mod-desc').value.trim() || parsed.description || 'No description.';\n    const code = parsed.code || '';\n\n    const safeName = name.replace(/\\s+/g, '_');\n    const mod = {\n      name,\n      author,\n      description: desc,\n      code,\n      run: new Function(code),\n      stop: () => { window[safeName + '_stop']?.(); }\n    };\n\n    const wait = setInterval(() => {\n      if (window.CobaltHash?.registerMod) {\n        clearInterval(wait);\n        window.CobaltHash.registerMod(mod);\n        console.log('Mod registered:', mod);\n      }\n    }, 500);\n  });\n\n  // Drop zone logic\n  const dropzone = document.getElementById('cmlm-dropzone');\n  dropzone.addEventListener('dragover', e => e.preventDefault());\n  dropzone.addEventListener('drop', e => {\n    e.preventDefault();\n    const file = e.dataTransfer.files[0];\n    if (file && file.name.endsWith('.cmlm')) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        document.getElementById('cmlm-editor').value = reader.result;\n      };\n      reader.readAsText(file);\n    } else {\n      alert('Please drop a .CMLM file');\n    }\n  });\n\n  // Cleanup function\n  window.Patch_3_1_1EC_stop = function () {\n    tabButton.remove();\n    tabContent.remove();\n  };\n})();"
}
