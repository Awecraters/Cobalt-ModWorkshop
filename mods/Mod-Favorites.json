{
  "name": "Mod Favorites",
  "author": "Cobalt Official",
  "description": "Adds a Favorites tab with star indicators and buttons for all mods.",
  "code": "(function () {\n  const STORAGE_KEY = 'cobaltFavorites';\n\n  function getFavorites() {\n    return JSON.parse(localStorage.getItem(STORAGE_KEY) || '[]');\n  }\n\n  function saveFavorites(favs) {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(favs));\n  }\n\n  function isFavorited(name) {\n    return getFavorites().includes(name);\n  }\n\n  function toggleFavorite(name) {\n    const favs = getFavorites();\n    const i = favs.indexOf(name);\n    if (i >= 0) favs.splice(i, 1);\n    else favs.push(name);\n    saveFavorites(favs);\n    updateAllStars();\n    renderFavoritesTab();\n  }\n\n  function createStar(name) {\n    const star = document.createElement('span');\n    star.textContent = '⭐';\n    star.className = 'mod-fav-star';\n    star.style.marginLeft = '8px';\n    star.style.opacity = isFavorited(name) ? '1' : '0.3';\n    return star;\n  }\n\n  function createFavoriteButton(name) {\n    const btn = document.createElement('button');\n    btn.textContent = isFavorited(name) ? 'Unfavorite' : 'Favorite';\n    btn.className = 'mod-fav-btn';\n    btn.style.marginTop = '5px';\n    btn.addEventListener('click', e => {\n      e.stopPropagation();\n      toggleFavorite(name);\n    });\n    return btn;\n  }\n\n  function decorateCard(card, name) {\n    const strong = card.querySelector('strong');\n    if (!strong || card.querySelector('.mod-fav-star')) return;\n    strong.appendChild(createStar(name));\n    card.appendChild(createFavoriteButton(name));\n  }\n\n  function updateAllStars() {\n    document.querySelectorAll('.mod-card').forEach(card => {\n      const name = card.querySelector('strong')?.textContent.trim();\n      if (!name) return;\n      const star = card.querySelector('.mod-fav-star');\n      const btn = card.querySelector('.mod-fav-btn');\n      if (star) star.style.opacity = isFavorited(name) ? '1' : '0.3';\n      if (btn) btn.textContent = isFavorited(name) ? 'Unfavorite' : 'Favorite';\n    });\n  }\n\n  function renderFavoritesTab() {\n    const favs = getFavorites();\n    const favContainer = document.getElementById('favorites');\n    if (!favContainer) return;\n    favContainer.innerHTML = '';\n\n    const allCards = Array.from(document.querySelectorAll('.mod-card'));\n    favs.forEach(name => {\n      const match = allCards.find(card => {\n        const n = card.querySelector('strong')?.textContent.trim();\n        return n === name;\n      });\n      if (match) {\n        const clone = match.cloneNode(true);\n        decorateCard(clone, name);\n        favContainer.appendChild(clone);\n      }\n    });\n  }\n\n  function createFavoritesTab() {\n    const tabs = document.getElementById('cobalt-tabs');\n    if (!tabs || document.getElementById('favorites-tab')) return;\n\n    const tab = document.createElement('div');\n    tab.className = 'cobalt-tab';\n    tab.id = 'favorites-tab';\n    tab.dataset.tab = 'favorites';\n    tab.textContent = 'Favorites';\n    tabs.appendChild(tab);\n\n    const content = document.createElement('div');\n    content.id = 'favorites';\n    content.className = 'cobalt-tab-content';\n    document.getElementById('cobalt-sidebar').appendChild(content);\n\n    tab.addEventListener('click', () => {\n      document.querySelectorAll('.cobalt-tab').forEach(t => t.classList.remove('active'));\n      document.querySelectorAll('.cobalt-tab-content').forEach(c => c.classList.remove('active'));\n      tab.classList.add('active');\n      content.classList.add('active');\n      renderFavoritesTab();\n    });\n  }\n\n  function decorateAllCards() {\n    document.querySelectorAll('.mod-card').forEach(card => {\n      const name = card.querySelector('strong')?.textContent.trim();\n      if (name) decorateCard(card, name);\n    });\n  }\n\n  function observeCards() {\n    const observer = new MutationObserver(() => {\n      decorateAllCards();\n      updateAllStars();\n    });\n    observer.observe(document.body, { childList: true, subtree: true });\n  }\n\n  function injectStyles() {\n    const style = document.createElement('style');\n    style.textContent = `.mod-fav-star { font-size: 1.2em; transition: opacity 0.2s; }`;\n    document.head.appendChild(style);\n  }\n\n  function init() {\n    injectStyles();\n    createFavoritesTab();\n    decorateAllCards();\n    updateAllStars();\n    observeCards();\n  }\n\n  const wait = setInterval(() => {\n    if (document.getElementById('cobalt-tabs') && document.getElementById('cobalt-sidebar')) {\n      clearInterval(wait);\n      init();\n    }\n  }, 500);\n})();"
}
